{"version":3,"sources":["components/Card.jsx","components/Form.jsx","components/App.jsx","index.js"],"names":["Card","useState","initialState","setInitialState","useEffect","axios","get","then","res","result","data","catch","error","response","console","log","status","headers","className","length","map","e","i","key","src","url","alt","loading","name","caption","Form","setName","setCaption","setUrl","autoComplete","onSubmit","event","preventDefault","isImageUrl","post","alert","type","placeholder","value","onChange","target","required","App","ReactDOM","render","document","getElementById"],"mappings":"8NAkDeA,MA/Cf,WAAiB,MAAD,EAC0BC,mBAAS,IADnC,mBACPC,EADO,KACOC,EADP,KAmBd,OAhBAC,oBAAU,KACRC,IACGC,IAAI,yCACJC,KAAMC,IACL,MAAMC,EAASD,EAAIE,KACnBP,EAAgBM,KAEjBE,MAAOC,IACFA,EAAMC,WACRC,QAAQC,IAAIH,EAAMC,SAASH,MAC3BI,QAAQC,IAAIH,EAAMC,SAASG,QAC3BF,QAAQC,IAAIH,EAAMC,SAASI,aAGhC,IAGD,yBAAKC,UAAU,WACb,yBAAKA,UAAU,wBACZhB,EAAaiB,OAAS,GACrBjB,EAAakB,IAAI,CAACC,EAAGC,IACnB,yBAAKJ,UAAU,sBAAsBK,IAAKD,GACxC,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBAAKM,IAAKH,EAAEI,IAAKC,IAAI,GAAGC,QAAQ,WAGpC,yBAAKT,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,cAAcG,EAAEO,MAC7B,uBAAGV,UAAU,iBAAiBG,EAAEQ,kB,yBCkEvCC,MApGf,WAAgB,QAEU7B,mBAAS,IAFnB,mBAEP2B,EAFO,KAEDG,EAFC,OAGgB9B,mBAAS,IAHzB,mBAGP4B,EAHO,KAGEG,EAHF,OAIQ/B,mBAAS,IAJjB,mBAIPwB,EAJO,KAIFQ,EAJE,KA8Bd,OACE,6BACE,yBAAKf,UAAU,WACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,gDAAd,gBAIF,yBAAKA,UAAU,aACb,0BAAMgB,aAAa,MAAMC,SAhCXC,IACpBA,EAAMC,iBACFC,IAAWb,GACbpB,IACGkC,KAAK,wCAAyC,CAC7CX,KAAMA,EACNH,IAAKA,EACLI,QAASA,IAEVtB,KACEM,IACC2B,MAAM,6BAEP5B,IACC4B,MAAM,4CAIZA,MAAM,6BAeA,yBAAKtB,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVuB,KAAK,OACLC,YAAY,uBACZd,KAAK,OACLe,MAAOf,EACPgB,SAAWvB,IACTU,EAAQV,EAAEwB,OAAOF,QAEnBG,UAAU,MAIhB,yBAAK5B,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVuB,KAAK,OACLC,YAAY,qBACZd,KAAK,UACLe,MAAOd,EACPe,SAAWvB,IACTW,EAAWX,EAAEwB,OAAOF,QAEtBG,UAAU,MAIhB,2BAAO5B,UAAU,SAAjB,YACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,uBACb,2BACEA,UAAU,oBACVuB,KAAK,MACLC,YAAY,8BACZd,KAAK,MACLe,MAAOlB,EACPmB,SAAWvB,IACTY,EAAOZ,EAAEwB,OAAOF,QAElBG,UAAU,KAGd,yBAAK5B,UAAU,WACb,4BAAQA,UAAU,iBAAiBuB,KAAK,UAAxC,sBC7EDM,MATf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fdde3261.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Card() {\r\n  const [initialState, setInitialState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://xmemenode.herokuapp.com/memes\")\r\n      .then((res) => {\r\n        const result = res.data;\r\n        setInitialState(result);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"columns is-multiline\">\r\n        {initialState.length > 0 &&\r\n          initialState.map((e, i) => (\r\n            <div className=\"column is-one-third\" key={i}>\r\n              <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                  <figure className=\"image is-4by3\">\r\n                    <img src={e.url} alt=\"\" loading=\"lazy\" />\r\n                  </figure>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                  <div className=\"media\">\r\n                    <div className=\"media-content\">\r\n                      <p className=\"title is-4\">{e.name}</p>\r\n                      <p className=\"subtitle is-6\">{e.caption}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport isImageUrl from \"is-image-url\";\r\n\r\nfunction Form() {\r\n  // initialization state\r\n  const [name, setName] = useState(\"\");\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  // posting Data to Database\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isImageUrl(url))\r\n      axios\r\n        .post(\"https://xmemenode.herokuapp.com/memes\", {\r\n          name: name,\r\n          url: url,\r\n          caption: caption,\r\n        })\r\n        .then(\r\n          (response) => {\r\n            alert(\"meme posted successfully\");\r\n          },\r\n          (error) => {\r\n            alert(\"Sorry! cannot post your meme right now\");\r\n          }\r\n        );\r\n    else {\r\n      alert(\"Enter a Valid Image Url\");\r\n    }\r\n  };\r\n\r\n  // return the form\r\n  return (\r\n    <div>\r\n      <div className=\"section\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title has-text-weight-bold has-text-centered\">\r\n            Meme Stream\r\n          </h1>\r\n        </div>\r\n        <div className=\"container\">\r\n          <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <div className=\"field\">\r\n              <label className=\"lable\">Meme Owner</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your full name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                  required={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"lable\">Caption</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Your Caption\"\r\n                  name=\"caption\"\r\n                  value={caption}\r\n                  onChange={(e) => {\r\n                    setCaption(e.target.value);\r\n                  }}\r\n                  required={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <label className=\"lable\">Meme URL</label>\r\n            <div className=\"field has-addons\">\r\n              <div className=\"control is-expanded\">\r\n                <input\r\n                  className=\"input is-expanded\"\r\n                  type=\"url\"\r\n                  placeholder=\"Enter URL of your meme here\"\r\n                  name=\"url\"\r\n                  value={url}\r\n                  onChange={(e) => {\r\n                    setUrl(e.target.value);\r\n                  }}\r\n                  required={true}\r\n                />\r\n              </div>\r\n              <div className=\"control\">\r\n                <button className=\"button is-link\" type=\"submit\">\r\n                  Submit Meme\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport Card from \"./Card\";\nimport 'bulma/css/bulma.css';\nimport Form from \"./Form\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Form />\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}